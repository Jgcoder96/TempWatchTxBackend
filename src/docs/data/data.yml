openapi: 3.0.1
info:
  title: API de Sensores
  description: Endpoints para gestión de lecturas de sensores
  version: 1.0.0

paths:
  /api/data:
    post:
      tags:
        - data
      summary: Endpoint para almacenar las mediciones recibidas desde los sensores
      description: Este servicio permite registrar las lecturas de los sensores en la base de datos.
      operationId: storeSensorReadings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  minItems: 1
                  description: Lista de lecturas de sensores (mínimo 1 registro)
                  items:
                    type: object
                    required:
                      - id_sensor
                      - voltage
                      - temperature
                    properties:
                      id_sensor:
                        type: string
                        format: uuid
                        description: Identificador único del sensor (UUID v4)
                        example: "1617eb36-d677-44d9-add1-f9ee84da4d91"
                      voltage:
                        type: number
                        format: float
                        minimum: 0
                        description: Valor de voltaje en voltios (V)
                        example: 5.8
                      temperature:
                        type: number
                        format: float
                        description: Valor de temperatura en grados Celsius (°C)
                        example: 6.8
                      status:
                        type: string
                        enum: ["normal", "preventive", "emergency"]
                        description: Estado del sensor (opcional)
                        example: "normal"
            examples:
              Lecturas_básicas:
                summary: "Ejemplo sin estados"
                value:
                  data:
                    - id_sensor: "03136b1f-65e1-4d92-ae19-8ba71876cdb5"
                      voltage: 40
                      temperature: 70
                    - id_sensor: "f418cf2e-22fb-40e3-9f31-2578d79db87f"
                      voltage: 50
                      temperature: 80
                    - id_sensor: "90f7ec5d-56c9-423d-92ea-9721b685f9f9"
                      voltage: 70
                      temperature: 100
                    - id_sensor: "74ede588-0fdc-4a85-8232-6455e163dbfb"
                      voltage: 90
                      temperature: 130
              Lecturas_con_estados:
                summary: "Ejemplo con estados"
                value:
                  data:
                    - id_sensor: "03136b1f-65e1-4d92-ae19-8ba71876cdb5"
                      voltage: 40
                      temperature: 70
                      status: "normal"
                      motor_speed: "off"
                    - id_sensor: "f418cf2e-22fb-40e3-9f31-2578d79db87f"
                      voltage: 50
                      temperature: 80
                      status: "preventive"
                      motor_speed: "normal"
                    - id_sensor: "90f7ec5d-56c9-423d-92ea-9721b685f9f9"
                      voltage: 70
                      temperature: 100
                      status: "emergency"
                      motor_speed: "high"
                    - id_sensor: "74ede588-0fdc-4a85-8232-6455e163dbfb"
                      voltage: 90
                      temperature: 130
                      status: "normal"
                      motor_speed: "off"
      responses:
        '201':
          description: Los datos se registraron correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Los datos se registraron correctamente."
        '400':
          description: Error en los parámetros
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Parámetros incorrectos en el cuerpo de la solicitud."
        '404':
          description: Ruta no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Ruta no encontrada."
        '409':
          description: Conflicto de datos
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: boolean
                  message:
                    type: string
              examples:
                RegistroExistente:
                  value:
                    res: false
                    message: "El registro ya existe en la base de datos."
                SensorNoRegistrado:
                  value:
                    res: false
                    message: "El sensor no se encuentra registrado en la base de datos."
        '500':
          description: Error interno
          content:
            application/json:
              schema:
                type: object
                properties:
                  res:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Error interno del servidor."